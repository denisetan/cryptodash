{"version":3,"sources":["App/AppLayout.js","App/AppProvider.js","App/AppBar.js","Settings/WelcomeMessage.js","Shared/Styles.js","Settings/ConfirmButton.js","Shared/Page.js","Shared/Tile.js","Settings/CoinHeaderGrid.js","Shared/CoinImage.js","Settings/CoinTile.js","Settings/CoinGrid.js","Settings/Search.js","Settings/index.js","Dashboard/PriceTile.js","Dashboard/PriceGrid.js","Dashboard/CoinSpotlight.js","Dashboard/HighchartsConfig.js","Dashboard/HighchartsTheme.js","Dashboard/ChartSelect.js","Dashboard/PriceChart.js","Dashboard/index.js","Shared/Content.js","App/index.js","serviceWorker.js","index.js"],"names":["styled","div","cc","require","AppContext","React","createContext","MAX_FAVORITES","TIME_UNITS","AppProvider","props","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","a","coinList","Data","setState","state","firstVisit","prices","filter","price","Object","keys","length","historical","results","name","currentFavorite","data","map","ticker","index","moment","subtract","timeInterval","valueOf","USD","returnData","i","favorites","priceFull","priceData","push","console","warn","promises","units","priceHistorical","toDate","Promise","all","addCoin","key","removeCoin","_","pull","isInFavorites","includes","confirmFavorites","page","localStorage","setItem","JSON","stringify","setCurrentFavorite","sym","parse","getItem","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","savedSettings","cryptoDashData","Provider","this","children","Component","Logo","Bar","ControlButtonElem","active","css","hidden","ControlButton","Consumer","lower","onClick","charAt","toUpperCase","substr","lightBlueBackground","backgroundColor2","subtleBoxShadow","greenBoxShadow","ConfirmButtonStyled","CenterDiv","Tile","SelectableTile","DeletableTile","DisabledTile","CoinHeaderGridStyled","CoinSymbol","DeleteIcon","symbol","topSection","CoinImage","img","spotlight","coin","alt","src","ImageUrl","clickCoinHandler","coinKey","TileClass","CoinHeaderGrid","CoinName","Symbol","CoinGridStyled","getCoinsToDisplay","filterCoins","slice","getLowerSectionCoins","CoinTile","SearchGrid","SearchInput","input","handleFilter","debounce","inputValue","setFilterCoins","coinSymbols","coinNames","allStringsToSearch","concat","fuzzyResults","fuzzy","result","string","log","pickBy","symKey","coinName","onKeyUp","e","target","Page","WelcomeMessage","CoinGrid","ConfirmButton","Search","JustifyRight","JustifyLeft","TickerPrice","ChangePct","red","numberFormat","number","PriceTileStyled","compact","ChangePercent","CHANGEPCT24HOUR","PriceTile","PRICE","PriceTileCompact","PriceGrid","SpotlightName","h2","title","text","yAxis","xAxis","type","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","colors","chart","backgroundColor","borderColor","borderWidth","className","plotBackgroundColor","plotBorderWidth","style","color","font","subtitle","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","fontFamily","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","itemHoverStyle","itemHiddenStyle","credits","enabled","navigation","buttonOptions","symbolStroke","hoverSymbolStroke","theme","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","select","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","legendBackgroundColor","background2","dataLabelsColor","textColor","maskColor","ReactHighcharts","Highcharts","setOptions","HighchartsTheme","ChartSelect","defaultValue","onChange","config","highchartsConfig","ChartGrid","CoinSpotlight","PriceChart","App","AppLayout","AppBar","Content","Settings","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.713aeb45.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    padding: 40px;\r\n`","import React from 'react';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nconst cc = require('cryptocompare');\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst MAX_FAVORITES = 10;\r\nconst TIME_UNITS = 10;\r\n\r\nexport class AppProvider extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            page: 'dashboard',\r\n            favorites: ['BTC', 'ETH', 'XMR', 'DOGE'], \r\n            timeInterval: 'months',\r\n            ...this.savedSettings(),\r\n            setPage: this.setPage,\r\n            addCoin: this.addCoin,\r\n            removeCoin: this.removeCoin,\r\n            isInFavorites: this.isInFavorites,\r\n            confirmFavorites: this.confirmFavorites,\r\n            setCurrentFavorite: this.setCurrentFavorite,\r\n            setFilteredCoins: this.setFilteredCoins,\r\n            changeChartSelect: this.changeChartSelect\r\n        }\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        this.fetchCoins();\r\n        this.fetchPrices();\r\n        this.fetchHistorical();\r\n    }\r\n    \r\n    fetchCoins = async () => {\r\n        let coinList = (await cc.coinList()).Data;\r\n        this.setState({coinList});        \r\n    }\r\n    \r\n    fetchPrices = async () => {\r\n        if (this.state.firstVisit) return;            \r\n        let prices = await this.prices();\r\n         // We must filter the empty price objects (not in the lecture)\r\n        prices = prices.filter(price => Object.keys(price).length);\r\n        this.setState({prices});\r\n    }\r\n    \r\n    fetchHistorical = async () => {\r\n        if (this.state.firstVisit) return;\r\n        let results = await this.historical();\r\n        let historical = [\r\n            {\r\n                name: this.state.currentFavorite,\r\n                data: results.map((ticker, index) => [\r\n                    moment().subtract({[this.state.timeInterval]: TIME_UNITS - index}).valueOf(),\r\n                    ticker.USD\r\n                ])\r\n                    \r\n            }   \r\n        ]\r\n        this.setState({historical});\r\n    }\r\n    \r\n    prices = async () => {\r\n        let returnData = [];\r\n        for (let i = 0; i < this.state.favorites.length; i++) {\r\n            try {\r\n                let priceData = await cc.priceFull(this.state.favorites[i], 'USD');\r\n                returnData.push(priceData);\r\n            } catch(e){\r\n                console.warn('Fetch price error: ', e);\r\n            }\r\n        }\r\n        return returnData;\r\n    }\r\n    \r\n    historical = () => {\r\n        let promises = [];\r\n        for (let units = TIME_UNITS; units > 0; units--){\r\n            promises.push(\r\n                cc.priceHistorical(\r\n                    this.state.currentFavorite,\r\n                    ['USD'],\r\n                    moment()\r\n                    .subtract({[this.state.timeInterval]: units})\r\n                    .toDate()\r\n                )\r\n            )\r\n        }\r\n        return Promise.all(promises);\r\n    }\r\n    \r\n    addCoin = key => {\r\n        let favorites = [...this.state.favorites];\r\n        if (favorites.length < MAX_FAVORITES){\r\n            favorites.push(key);\r\n            this.setState({favorites});            \r\n        }\r\n    }\r\n    \r\n    removeCoin = key => {\r\n        let favorites = [...this.state.favorites];\r\n        this.setState({favorites: _.pull(favorites, key)})\r\n    }\r\n    \r\n    isInFavorites = key => _.includes(this.state.favorites, key)\r\n    \r\n    confirmFavorites = () => {\r\n        let currentFavorite = this.state.favorites[0];\r\n        this.setState({\r\n            firstVisit: false,\r\n            page: 'dashboard',\r\n            currentFavorite,\r\n            prices: null,\r\n            historical: null\r\n        }, () => {\r\n            this.fetchPrices();\r\n            this.fetchHistorical();\r\n        });\r\n        localStorage.setItem('cryptoDash', JSON.stringify({\r\n            favorites: this.state.favorites,\r\n            currentFavorite\r\n        }));\r\n    }\r\n    \r\n    setCurrentFavorite = (sym) => {\r\n        this.setState({\r\n            currentFavorite: sym,\r\n            historical: null\r\n        }, this.fetchHistorical);\r\n        localStorage.setItem('cryptoDash', JSON.stringify({\r\n            ...JSON.parse(localStorage.getItem('cryptoDash')),\r\n            currentFavorite: sym \r\n        }))\r\n    }  \r\n    \r\n    savedSettings(){\r\n        let cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\r\n        if (!cryptoDashData){\r\n            return {page:'settings', firstVisit: true}\r\n        }\r\n        let {favorites, currentFavorite} = cryptoDashData;\r\n        return{favorites, currentFavorite};\r\n    }\r\n    \r\n    setPage = page => this.setState({page})\r\n\r\n    setFilteredCoins = (filteredCoins) => this.setState({filteredCoins})\r\n\r\n    changeChartSelect = (value) => {        \r\n        this.setState({timeInterval: value, historical: null}, this.fetchHistorical);\r\n    }\r\n        \r\n    render(){\r\n        return (\r\n        <AppContext.Provider value={this.state}>\r\n            {this.props.children}\r\n        </AppContext.Provider>        \r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {AppContext} from \"./AppProvider\";\r\n\r\nconst Logo = styled.div`\r\n    font-size: 1.5em;\r\n`\r\n\r\nconst Bar = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 180px auto 100px 100px;\r\n    margin-bottom: 40px;\r\n`\r\n\r\nconst ControlButtonElem = styled.div`\r\n    cursor: pointer;\r\n    ${props => props.active && css`\r\n        text-shadow: 0px 0px 60px #03ff03;\r\n        color: #03ff03;\r\n    `}\r\n    ${props => props.hidden && css`\r\n        display: none;\r\n    `}\r\n`\r\n\r\nfunction toProperCase(lower){\r\n    return lower.charAt(0).toUpperCase() + lower.substr(1);\r\n}\r\n\r\nfunction ControlButton({name}){\r\n    return (\r\n    <AppContext.Consumer>\r\n        {({firstVisit, page, setPage}) =>(\r\n        <ControlButtonElem\r\n        active={page===name}\r\n        onClick={()=> setPage(name)}\r\n        hidden={firstVisit && name === 'dashboard'}\r\n        >\r\n            {toProperCase(name)}\r\n        </ControlButtonElem>\r\n        )}\r\n    </AppContext.Consumer>\r\n    )\r\n    \r\n}\r\n\r\nexport default function(){\r\n    return (\r\n        <Bar> \r\n            <Logo> CryptoDash </Logo>\r\n            <div />\r\n            <ControlButton active name=\"dashboard\"/>\r\n            <ControlButton name=\"settings\"/>\r\n        </Bar>\r\n    )\r\n}","import React from 'react';\r\nimport {AppContext} from \"../App/AppProvider\";\r\n\r\nexport default function ({firstVisit}) {\r\n    return (\r\n        <AppContext.Consumer>\r\n        {({firstVisit}) =>\r\n            firstVisit ? <div>\r\n            Welcome to CryptoDash, please select your favorite coins to begin.{' '}\r\n        </div> : null\r\n        }\r\n    </AppContext.Consumer>\r\n    );        \r\n};\r\n","const theme = 'dark';\r\n//const theme = 'light';\r\nexport const lightTheme = theme === 'light';\r\n\r\nexport const color = lightTheme ? 'white' : '#061a44';\r\nexport const color2 = lightTheme ? 'white' : '#010e2c';\r\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\r\n\r\nif (lightTheme) {\r\n  document.body.style.background = '#e1eaee';\r\n  document.body.style.color = '#061a44';\r\n}\r\n\r\nexport const lightBlueBackground = `background-color: ${color}`;\r\nexport const backgroundColor2 = `background-color: ${color2};`;\r\nexport const greenBackgroundColor = `background-color: ${color3};`;\r\n\r\nexport const fontColorGreen = `color: #03A9F4`;\r\nexport const fontColorWhite = `color: white`;\r\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#121d5b'}`;\r\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\r\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\r\n\r\nexport const fontSizeBig = 'font-size: 2em';\r\nexport const fontSize1 = 'font-size: 1.5em;';\r\nexport const fontSize2 = 'font-size: 1.0em';\r\nexport const fontSize3 = 'font-size: .75em';\r\n\r\nexport const textAlignCenter = 'text-align: center;';\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {AppContext} from \"../App/AppProvider\";\r\nimport {fontSize1, greenBoxShadow, color3} from \"../Shared/Styles\";\r\n\r\nconst ConfirmButtonStyled = styled.div`\r\n    margin: 20px;\r\n    color: ${color3};\r\n    ${fontSize1};\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    &:hover{\r\n        ${greenBoxShadow}\r\n    }   \r\n`\r\nexport const CenterDiv = styled.div`\r\n    display: grid;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default function(){\r\n    return <AppContext.Consumer>\r\n        {({confirmFavorites}) =>\r\n            <CenterDiv>\r\n                <ConfirmButtonStyled onClick={confirmFavorites}>\r\n                    Confirm Favorites\r\n                </ConfirmButtonStyled>                       \r\n            </CenterDiv>\r\n    }   \r\n        </AppContext.Consumer>\r\n}","import React from 'react';\r\nimport {AppContext} from \"../App/AppProvider\";\r\n\r\nexport default function ({name, children}) {\r\n    return <AppContext.Consumer>\r\n        {({page}) => {\r\n            if (page !== name) {\r\n                return null;\r\n            }\r\n            return <div> {children} </div>;            \r\n        }}\r\n    </AppContext.Consumer>;\r\n}","import styled from 'styled-components';\r\nimport {subtleBoxShadow, lightBlueBackground, greenBoxShadow, redBoxShadow} from \"./Styles\";\r\n\r\n\r\nexport const Tile = styled.div`\r\n    ${subtleBoxShadow}\r\n    ${lightBlueBackground}\r\n    Padding: 10px;\r\n`\r\n\r\nexport const SelectableTile = styled(Tile)`\r\n    &:hover {\r\n        cursor: pointer;\r\n        ${greenBoxShadow}\r\n    }\r\n`\r\n\r\nexport const DeletableTile = styled(SelectableTile)`\r\n    &:hover {\r\n        cursor: pointer;\r\n        ${redBoxShadow}\r\n    }\r\n`;\r\n\r\nexport const DisabledTile = styled(Tile)`\r\n    pointer-events: none;\r\n    opacity: 0.4;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {DeletableTile} from \"../Shared/Tile\";\r\n\r\nexport const CoinHeaderGridStyled = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n`;\r\nexport const CoinSymbol = styled.div`\r\n    justify-self: right;\r\n`;\r\n\r\nconst DeleteIcon = styled.div`\r\n    justify-self: right;\r\n    display: none;\r\n    ${DeletableTile}: hover & {\r\n    display: block;\r\n    color: red;\r\n    }\r\n`;\r\n\r\nexport default function ({name, symbol, topSection}){\r\n    return <CoinHeaderGridStyled>\r\n        <div> {name} </div>\r\n    {topSection ?(\r\n        <DeleteIcon> X </DeleteIcon>\r\n    ) : (\r\n        <CoinSymbol> {symbol} </CoinSymbol>\r\n    )}    \r\n    </CoinHeaderGridStyled>\r\n}","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\n\r\nconst CoinImage = styled.img`\r\n    height: 50px;\r\n    ${props => props.spotlight && css`\r\n        height: 200px;\r\n        margin: auto;\r\n        display: block;\r\n    `}\r\n`\r\n\r\nexport default function ({coin, spotlight}){\r\n    return <CoinImage \r\n        spotlight={spotlight}\r\n        alt={coin.CoinSymbol}        \r\n        src={`http://cryptocompare.com/${\r\n            coin.ImageUrl\r\n        }`}\r\n    />; \r\n}","import React from 'react';\r\nimport {AppContext} from \"../App/AppProvider\";\r\nimport {SelectableTile, DisabledTile, DeletableTile} from \"../Shared/Tile\";\r\nimport CoinHeaderGrid from './CoinHeaderGrid';\r\nimport CoinImage from '../Shared/CoinImage';\r\n\r\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin){\r\n    return topSection ? () => {\r\n        removeCoin(coinKey)\r\n    } : () => {\r\n        addCoin(coinKey)\r\n    }\r\n}\r\n\r\nexport default function({coinKey, topSection}){     \r\n    return <AppContext.Consumer>\r\n        {({coinList, addCoin, removeCoin, isInFavorites}) => {\r\n            let coin = coinList[coinKey]; \r\n            \r\n            let TileClass = SelectableTile;\r\n            if (topSection){\r\n                TileClass = DeletableTile;\r\n            } else if (isInFavorites(coinKey)){\r\n                TileClass = DisabledTile;\r\n            }\r\n                        \r\n            return <TileClass\r\n                onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}\r\n            >\r\n                <CoinHeaderGrid \r\n                    topSection={topSection} \r\n                    name={coin.CoinName} \r\n                    symbol={coin.Symbol}/> \r\n                <CoinImage coin={coin}/>               \r\n            </TileClass>            \r\n        }}        \r\n    </AppContext.Consumer>\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {AppContext} from \"../App/AppProvider\";\r\nimport CoinTile from \"./CoinTile\";\r\n\r\nexport const CoinGridStyled = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\r\n    grid-gap: 15px;\r\n    margin-top: 40px;\r\n`\r\n\r\nfunction getLowerSectionCoins(coinList, filteredCoins){\r\n    return (filteredCoins && Object.keys(filteredCoins)) ||\r\n        Object.keys(coinList).slice(0, 100)\r\n}\r\n\r\nfunction getCoinsToDisplay(coinList, topSection, favorites, filterCoins){\r\n    return topSection ? favorites : getLowerSectionCoins(coinList, filterCoins);\r\n}\r\n\r\nexport default function ({topSection}){\r\n    return (\r\n        <AppContext.Consumer>\r\n        {({coinList, favorites, filteredCoins}) => (\r\n            <CoinGridStyled>\r\n                {getCoinsToDisplay(coinList, topSection, favorites, filteredCoins).map(coinKey =>\r\n                 <CoinTile key={coinKey} topSection={topSection} coinKey={coinKey}/>\r\n                )}\r\n            </CoinGridStyled>\r\n            )}           \r\n        </AppContext.Consumer>\r\n        );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {backgroundColor2, fontSize2} from \"../Shared/Styles\";\r\nimport {AppContext} from \"../App/AppProvider\";\r\nimport _ from 'lodash';\r\nimport fuzzy from 'fuzzy';\r\n\r\n\r\nconst SearchGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 200px 1fr;\r\n`\r\nconst SearchInput = styled.input`\r\n    ${backgroundColor2}\r\n    ${fontSize2}\r\n    border: 1px solid;\r\n    height: 25px;\r\n    color: #1163c9;\r\n    place-self: center left;\r\n`\r\nconst handleFilter = _.debounce((inputValue, coinList, setFilterCoins) =>{\r\n    // Get all the coin symbols\r\n    let coinSymbols = Object.keys(coinList);\r\n    // Get all the coin names, map symbol to name\r\n    let coinNames = coinSymbols.map(sym => coinList[sym].CoinName);\r\n    let allStringsToSearch = coinSymbols.concat(coinNames);\r\n    let fuzzyResults = fuzzy\r\n    .filter(inputValue, allStringsToSearch, {})    \r\n    .map(result => result.string);\r\n    console.log(fuzzyResults);\r\n    \r\n    let filteredCoins = _.pickBy(coinList, (result, symKey) => {\r\n        let coinName = result.CoinName;\r\n        return (_.includes(fuzzyResults, symKey)|| _.includes(fuzzyResults, coinName));\r\n    });    \r\n    setFilterCoins(filteredCoins);    \r\n}, 500);\r\n\r\n\r\nfunction filterCoins(e, setFilteredCoins, coinList){\r\n    let inputValue = e.target.value;\r\n    if (!inputValue){\r\n        setFilteredCoins(null);\r\n        return;\r\n    }\r\n    handleFilter(inputValue, coinList, setFilteredCoins);\r\n}\r\n\r\n\r\nexport default function(){\r\n    return (\r\n        <AppContext.Consumer>\r\n        {({setFilteredCoins, coinList}) =>\r\n            <SearchGrid> \r\n                <h2>Search all coins</h2>\r\n                <SearchInput onKeyUp={(e) => filterCoins(e, setFilteredCoins, coinList)}/>\r\n            </SearchGrid>\r\n        }\r\n        </AppContext.Consumer>\r\n    );\r\n}","import React from 'react';\r\nimport WelcomeMessage from './WelcomeMessage'\r\nimport ConfirmButton from './ConfirmButton';\r\nimport Page from '../Shared/Page';\r\nimport CoinGrid from './CoinGrid';\r\nimport Search from './Search';\r\n\r\nexport default function(){\r\n    return <Page name=\"settings\"> \r\n            <WelcomeMessage/> \r\n            <CoinGrid topSection/>\r\n            <ConfirmButton/> \r\n            <Search/>\r\n            <CoinGrid/>\r\n        </Page>\r\n}","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {SelectableTile} from \"../Shared/Tile\";\r\nimport {fontSize3, fontSizeBig, greenBoxShadow} from \"../Shared/Styles\";\r\nimport {CoinHeaderGridStyled} from \"../Settings/CoinHeaderGrid\";\r\nimport {AppContext} from \"../App/AppProvider\";\r\n\r\nconst JustifyRight = styled.div`\r\n  justify-self: right; \r\n`\r\n\r\nconst JustifyLeft = styled.div`\r\n  justify-self: left; \r\n`\r\n\r\nconst TickerPrice = styled.div`\r\n  ${fontSizeBig};\r\n`\r\n\r\nconst ChangePct = styled.div`\r\n  color: green; \r\n  ${props => props.red && css`\r\n    color: red; \r\n  `}\r\n`\r\n\r\nconst numberFormat = number => {\r\n  return +(number + '').slice(0, 7);\r\n}\r\n\r\nconst PriceTileStyled = styled(SelectableTile)`\r\n  ${props => props.compact && css`\r\n    display: grid; \r\n    ${fontSize3}\r\n    grid-gap: 5px; \r\n    grid-template-columns: repeat(3, 1fr); \r\n    justify-items: right; \r\n  `}\r\n  \r\n  ${props => props.currentFavorite && css`\r\n    ${greenBoxShadow}\r\n    pointer-events: none; \r\n  `}\r\n`\r\n\r\nfunction ChangePercent({data}){\r\n  return (\r\n    <JustifyRight>\r\n      <ChangePct red={data.CHANGEPCT24HOUR < 0}>\r\n        {numberFormat(data.CHANGEPCT24HOUR)}%\r\n      </ChangePct>\r\n    </JustifyRight>\r\n  );\r\n}\r\n\r\nfunction PriceTile({sym, data, currentFavorite, setCurrentFavorite}){\r\n  return (\r\n    <PriceTileStyled onClick={setCurrentFavorite} currentFavorite={currentFavorite}>\r\n      <CoinHeaderGridStyled>\r\n        <div> {sym} </div>\r\n        <ChangePercent data={data}/>\r\n      </CoinHeaderGridStyled>\r\n      <TickerPrice>\r\n        ${numberFormat(data.PRICE)}\r\n      </TickerPrice>\r\n    </PriceTileStyled>\r\n  );\r\n}\r\n\r\nfunction PriceTileCompact({sym, data, currentFavorite, setCurrentFavorite}){\r\n  return (\r\n    <PriceTileStyled onClick={setCurrentFavorite} compact currentFavorite={currentFavorite}>\r\n      <JustifyLeft> {sym} </JustifyLeft>\r\n      <ChangePercent data={data}/>\r\n      <div>\r\n        ${numberFormat(data.PRICE)}\r\n      </div>\r\n    </PriceTileStyled>\r\n  );\r\n}\r\n\r\nexport default function({price, index}){\r\n  let sym = Object.keys(price)[0];\r\n  let data = price[sym]['USD'];\r\n  let TileClass = index < 5 ? PriceTile : PriceTileCompact;\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({currentFavorite, setCurrentFavorite}) =>\r\n        <TileClass\r\n          sym={sym}\r\n          data={data}\r\n          currentFavorite={currentFavorite === sym}\r\n          setCurrentFavorite={() => setCurrentFavorite(sym)}\r\n        >\r\n        </TileClass>\r\n      }\r\n    </AppContext.Consumer>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {AppContext} from \"../App/AppProvider\";\r\nimport PriceTile from './PriceTile';\r\n\r\nconst PriceGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    grid-gap: 15px;\r\n    margin-top: 40px;\r\n`\r\n\r\nexport default function(){\r\n    return (\r\n        <AppContext.Consumer>\r\n        {({prices}) =>(\r\n        <PriceGrid>\r\n            {prices.map((price,index) => (\r\n             <PriceTile key={`priceTile-${index}`}index={index} price={price}/>\r\n            ))}        \r\n        </PriceGrid>    \r\n    )}\r\n    </AppContext.Consumer>\r\n    );    \r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Tile} from \"../Shared/Tile\";\r\nimport {AppContext} from \"../App/AppProvider\";\r\nimport CoinImage from '../Shared/CoinImage';\r\n\r\nconst SpotlightName = styled.h2`\r\n    text-align: center;\r\n`\r\n\r\nexport default function (){\r\n    return (\r\n        <AppContext.Consumer>\r\n            {({currentFavorite, coinList}) =>\r\n                <Tile>\r\n                    <SpotlightName> {coinList[currentFavorite].CoinName} </SpotlightName>\r\n                    <CoinImage spotlight coin={coinList[currentFavorite]}/>\r\n                </Tile>\r\n            }\r\n         </AppContext.Consumer>\r\n    )\r\n}","export default function(historical){\r\n    return {\r\n        title: {\r\n            text: ''\r\n        },\r\n\r\n        yAxis: {\r\n            title: {\r\n                text: 'Price'\r\n            }\r\n        },\r\n        xAxis: {type: 'datetime'},\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'middle'\r\n        },\r\n\r\n        plotOptions: {\r\n            series: {\r\n                label: {\r\n                    connectorAllowed: false\r\n                },\r\n                pointStart: 2010\r\n            }\r\n        },\r\n\r\n        series: historical,\r\n\r\n        responsive: {\r\n            rules: [{\r\n                condition: {\r\n                    maxWidth: 500\r\n                },\r\n                chartOptions: {\r\n                    legend: {\r\n                        layout: 'horizontal',\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        }\r\n    };\r\n}\r\n\r\n","import {lightTheme} from \"../Shared/Styles\";\n\nexport default {\n  colors: [\n    '#61d936',\n    '#552ccb',\n    '#1163c9',\n    '#04A1EE',\n    '#08C6E0',\n    '#146B9E',\n    '#F376C1',\n    '#1B2839'\n  ],\n  chart: {\n    backgroundColor: lightTheme ? 'white' : '#061a44',\n    borderColor: '#000000',\n    borderWidth: 0,\n    className: 'dark-container',\n    plotBackgroundColor: lightTheme ? 'white' : '#061a44',\n    plotBorderWidth: 0\n  },\n  title: {\n    style: {\n      color: '#C0C0C0',\n      font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n    }\n  },\n  subtitle: {\n    style: {\n      color: '#666666',\n      font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\n    }\n  },\n  xAxis: {\n    gridLineColor: '#333333',\n    gridLineWidth: 0,\n    labels: {\n      style: {\n        color: '#A0A0A0'\n      }\n    },\n    lineColor: '#A0A0A0',\n    tickColor: '#A0A0A0',\n    title: {\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold',\n        fontSize: '12px',\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n\n      }\n    }\n  },\n  yAxis: {\n    gridLineWidth: 0,\n    gridLineColor: '#333333',\n    labels: {\n      style: {\n        color: '#A0A0A0'\n      }\n    },\n    lineColor: '#A0A0A0',\n    minorTickInterval: null,\n    tickColor: '#A0A0A0',\n    tickWidth: 1,\n    title: {\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold',\n        fontSize: '12px',\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n      }\n    }\n  },\n  tooltip: {\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\n    style: {\n      color: '#F0F0F0'\n    }\n  },\n  toolbar: {\n    itemStyle: {\n      color: 'silver'\n    }\n  },\n  plotOptions: {\n    line: {\n      dataLabels: {\n        color: '#CCC'\n      },\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    spline: {\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    scatter: {\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    candlestick: {\n      lineColor: 'white'\n    }\n  },\n  legend: {\n    itemStyle: {\n      font: '9pt Trebuchet MS, Verdana, sans-serif',\n      color: '#A0A0A0'\n    },\n    itemHoverStyle: {\n      color: '#FFF'\n    },\n    itemHiddenStyle: {\n      color: '#444'\n    }\n  },\n  credits: {\n    enabled: false\n  },\n  labels: {\n    style: {\n      color: '#CCC'\n    }\n  },\n\n  navigation: {\n    buttonOptions: {\n      symbolStroke: '#DDDDDD',\n      hoverSymbolStroke: '#FFFFFF',\n      theme: {\n        fill: {\n          linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n          stops: [\n            [0.4, '#606060'],\n            [0.6, '#333333']\n          ]\n        },\n        stroke: '#000000'\n      }\n    }\n  },\n\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: {\n        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n        stops: [\n          [0.4, '#888'],\n          [0.6, '#555']\n        ]\n      },\n      stroke: '#000000',\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold'\n      },\n      states: {\n        hover: {\n          fill: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n              [0.4, '#BBB'],\n              [0.6, '#888']\n            ]\n          },\n          stroke: '#000000',\n          style: {\n            color: 'white'\n          }\n        },\n        select: {\n          fill: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n              [0.1, '#000'],\n              [0.3, '#333']\n            ]\n          },\n          stroke: '#000000',\n          style: {\n            color: 'yellow'\n          }\n        }\n      }\n    },\n    inputStyle: {\n      backgroundColor: '#333',\n      color: 'silver'\n    },\n    labelStyle: {\n      color: 'silver'\n    }\n  },\n\n  navigator: {\n    handles: {\n      backgroundColor: '#666',\n      borderColor: '#AAA'\n    },\n    outlineColor: '#CCC',\n    maskFill: 'rgba(16, 16, 16, 0.5)',\n    series: {\n      color: '#7798BF',\n      lineColor: '#A6C7ED'\n    }\n  },\n\n  scrollbar: {\n    barBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0.4, '#888'],\n        [0.6, '#555']\n      ]\n    },\n    barBorderColor: '#CCC',\n    buttonArrowColor: '#CCC',\n    buttonBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0.4, '#888'],\n        [0.6, '#555']\n      ]\n    },\n    buttonBorderColor: '#CCC',\n    rifleColor: '#FFF',\n    trackBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0, '#000'],\n        [1, '#333']\n      ]\n    },\n    trackBorderColor: '#666'\n  },\n\n  // special colors for some of the\n  legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',\n  background2: 'rgb(35, 35, 70)',\n  dataLabelsColor: '#444',\n  textColor: '#C0C0C0',\n  maskColor: 'rgba(255,255,255,0.3)'\n};\n","import styled from 'styled-components';\r\nimport {backgroundColor2, fontSize2} from \"../Shared/Styles\";\r\n\r\nexport default styled.select`\r\n    ${backgroundColor2}\r\n    ${fontSize2}\r\n    color: #1163C9;\r\n    border: 1px solid;\r\n    margin: 5px;\r\n    height: 25px;\r\n    float: right;\r\n`;","import highchartsConfig from './HighchartsConfig';\r\nimport React from 'react';\r\nimport {Tile} from \"../Shared/Tile\";\r\nimport {AppContext} from \"../App/AppProvider\";\r\nimport ReactHighcharts from 'react-highcharts';\r\nimport HighchartsTheme from './HighchartsTheme';\r\nimport ChartSelect from './ChartSelect';\r\nReactHighcharts.Highcharts.setOptions(HighchartsTheme);\r\n\r\nexport default function() {\r\n    return (\r\n        <AppContext.Consumer>\r\n            {({historical, changeChartSelect}) =>\r\n            <Tile>\r\n                <ChartSelect\r\n                    defaultValue=\"months\"\r\n                    onChange={e => changeChartSelect(e.target.value)}\r\n                   >\r\n                    <option value=\"days\"> Days </option>\r\n                    <option value=\"weeks\"> Weeks </option>\r\n                    <option value=\"months\"> Months </option>\r\n                </ChartSelect>\r\n                {historical ?\r\n                 <ReactHighcharts config={highchartsConfig(historical)}/>\r\n                : <div> Loading Historical Data </div>\r\n            }\r\n            </Tile>\r\n            }\r\n        </AppContext.Consumer>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Page from '../Shared/Page';\r\nimport PriceGrid from './PriceGrid';\r\nimport CoinSpotlight from './CoinSpotlight';\r\nimport PriceChart from './PriceChart';\r\n\r\n\r\nconst ChartGrid = styled.div`\r\n    display: grid;\r\n    margin-top: 20px;\r\n    grid-gap: 15px;\r\n    grid-template-columns: 1fr 3fr;\r\n`\r\n\r\nexport default function(){\r\n    return <Page name=\"dashboard\"> \r\n            <PriceGrid/>\r\n            <ChartGrid>\r\n                <CoinSpotlight/>\r\n                <PriceChart/>\r\n            </ChartGrid>\r\n        </Page>\r\n}","import React from 'react';\r\nimport {AppContext} from \"../App/AppProvider\";\r\n\r\nexport default function(props){\r\n    return <AppContext.Consumer>\r\n        {({coinList, prices, firstVisit}) => {\r\n            if (!coinList){\r\n                return <div> Loading Coins </div>\r\n            }\r\n            if (!firstVisit && !prices){\r\n                return <div> Loading Prices </div>\r\n            }\r\n            return <div> {props.children} </div>            \r\n        }}\r\n    </AppContext.Consumer>\r\n    \r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport AppLayout from './AppLayout';\nimport AppBar from './AppBar';\nimport {AppProvider} from './AppProvider';\nimport Settings from '../Settings';\nimport Dashboard from '../Dashboard';\nimport Content from '../Shared/Content';\n\nclass App extends Component {\n  render () {\n      return (\n      <AppLayout>\n          <AppProvider>\n              <AppBar />\n              <Content>       \n                <Settings /> \n                <Dashboard />\n              </Content>\n          </AppProvider>\n      </AppLayout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}